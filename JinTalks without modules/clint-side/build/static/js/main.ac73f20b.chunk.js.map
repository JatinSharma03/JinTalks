{"version":3,"sources":["context/AccountProvider.jsx","socket/Socket.jsx","components/account/Login.jsx","components/sound/alert.mp3","components/account/Entry.jsx","components/chat components/Me.jsx","components/chat components/Users.jsx","components/chat components/TextMessages.jsx","components/chat components/Send.jsx","components/Chat.jsx","components/Messanger.jsx","App.js","reportWebVitals.js","index.js"],"names":["AccountContext","createContext","AccountProvider","children","useState","account","setaccount","roomId","setroomid","sound","setsound","alert","setalert","alertTimeout","setalerttimeout","messages","setmessages","roomUsers","setroomusers","Provider","value","socket","io","transports","on","id","useStyles","makeStyles","container","width","height","position","top","left","backgroundColor","zIndex","boxShadow","display","justifyContent","flexWrap","padding","leftComponent","flexDirection","alignItems","textAlign","fontSize","rightComponent","color","fontWeight","rightComponentButton","Login","classes","useContext","Box","className","Typography","style","List","ListItem","clientId","buttonText","cookiePolicy","isSignedIn","onSuccess","res","emit","profileObj","result","clearInterval","status","heading","text","email","clear","setTimeout","onFailure","render","renderProps","Button","onClick","rightInput","margin","Entry","showInputBox","setshowinputbox","createRoomId","randomNum","i","String","Math","floor","random","type","placeholder","onChange","event","target","length","document","getElementById","focus","useStyle","leftTopText","marginLeft","overflow","whiteSpace","textOverflow","lineHeight","leftTopImage","borderRadius","dialog","border","Me","me","setdialog","src","image","alt","name","Dialog","open","onClose","leftBottomBox","cursor","leftBottomImage","marginRight","leftBottomText","Users","user","getMessage","maxWidth","getMessageText","paddingLeft","getMessageTextData","getMessageTextChat","fonSize","sendMessage","formalities","TextMessages","message","time","overflowWrap","send","sendInput","sendButton","Send","sendMessageFun","input","onKeyPress","key","variant","containerLeft","containerRight","leftTop","leftBottom","overflowY","rightTop","rightBottom","Chat","useEffect","messageData","forScrollDown","scrollTop","scrollHeight","forAlertPurpose","users","map","data","fontFamily","icon","subCcontainer","button","paddingRight","marginBottom","Messanger","AppBar","Toolbar","component","Alert","severity","AlertTitle","href","textDecoration","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"8PAEaA,EAAiBC,wBAAc,MAG7B,SAASC,EAAT,GAAsC,IAAZC,EAAW,EAAXA,SAErC,EAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,qBAA5B,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,qBAA1B,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAwCR,qBAAxC,mBAAOS,EAAP,KAAqBC,EAArB,KAEA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAAkCZ,mBAAS,IAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KAEA,OACI,mCACI,cAAClB,EAAemB,SAAhB,CACAC,MAAO,CACHf,UACAC,aAEAC,SACAC,YAEAC,QACAC,WAEAC,QACAC,WAEAC,eACAC,kBAEAC,WACAC,cAEAC,YACCC,gBArBL,SAwBKf,M,gBCpCJkB,EAASC,YAFL,yBAEkB,CAAEC,WAAa,CAAC,eAInDF,EAAOG,GAAG,WAAW,WACNH,EAAOI,MCHtB,IAAMC,EAAYC,YAAW,CACzBC,UAAU,aACNC,MAAM,OACNC,OAAO,OACPC,SAAU,WACVC,IAAI,OACJC,KAAK,OACLC,gBAAgB,QAChBC,OAAO,GACPC,UAAU,iBACVC,QAAQ,OACRC,eAAe,eACfC,SAAS,QACR,2BAA4B,CACzBC,QAAQ,OACRX,MAAM,OACNC,OAAO,OACPC,SAAU,WACVC,IAAI,OACJC,KAAK,QAGbQ,eAAa,GACTJ,QAAQ,OACRK,cAAc,SACdC,WAAW,SACXL,eAAe,SACfR,OAAO,QALE,cAMR,2BAA4B,CACzBA,OAAO,OACPc,UAAU,WARL,cAUT,QAAQ,CACJC,SAAS,KAXJ,GAcbC,gBAAc,GACVT,QAAQ,OACRM,WAAW,SACXL,eAAe,SACfR,OAAO,QAJG,cAKT,2BAA4B,CACzBA,OAAO,SAND,cAQV,QAAQ,CACJI,gBAAgB,QAChBa,MAAM,QACNF,SAAS,GACTG,WAAW,IACXR,QAAQ,YACRJ,UAAU,mBAdJ,GAiBda,qBAAqB,CACjB,UAAU,CACNf,gBAAgB,QAChBa,MAAM,YAKH,SAASG,IAEpB,IAAMC,EAAUzB,IAGhB,EAA8D0B,qBAAWpD,GAAjEM,EAAR,EAAQA,WAAYM,EAApB,EAAoBA,SAASC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,gBA0C3C,OACI,mCACA,eAACuC,EAAA,EAAD,CAAKC,UAAWH,EAAQvB,UAAxB,UACI,eAACyB,EAAA,EAAD,CAAKC,UAAWH,EAAQV,cAAxB,UACI,cAACc,EAAA,EAAD,CAAYC,MAAO,CAAC3B,MAAM,OAAQgB,SAAS,GAAIL,QAAQ,IAAvD,+CAGA,eAACiB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,qDAGA,cAACA,EAAA,EAAD,qCAGA,cAACA,EAAA,EAAD,qCAGA,cAACA,EAAA,EAAD,oDAKR,cAACL,EAAA,EAAD,CAAKC,UAAWH,EAAQL,eAAxB,SAEI,cAAC,cAAD,CACAa,SArEI,2EAsEJC,WAAW,GACXC,aAAc,qBACdC,YAAY,EACZC,UArEW,SAACC,GACpB3C,EAAO4C,KAAK,sBAAsBD,EAAIE,YACtC7C,EAAOG,GAAG,6BAA4B,SAAA2C,GAClC,GAAa,GAAVA,EAAgB,CACf7D,EAAW6D,GAEXvD,IACAwD,cAAcvD,GACdD,EAAS,CAACyD,OAAO,UAAUC,QAAQ,mBAAmBC,KAAK,wDAAD,OAAyDP,EAAIE,WAAWM,SAClI,IAAIC,EAAQC,YAAW,WACrB9D,MACC,KACHE,EAAgB2D,OAEhB,CACAnE,EAAW6D,GAEXvD,IACAwD,cAAcvD,GACdD,EAAS,CAACyD,OAAO,QAAQC,QAAQ,eAAeC,KAAK,gDAAD,OAAiDP,EAAIE,WAAWM,SACpH,IAAIC,EAAQC,YAAW,WACrB9D,MACC,KACHE,EAAgB2D,QA+ChBE,UAzCQ,WAEhB/D,IACAwD,cAAcvD,GACdD,EAAS,CAACyD,OAAO,QAAQC,QAAQ,eAAeC,KAAK,wCACrD,IAAIE,EAAQC,YAAW,WACrB9D,MACC,KACHE,EAAgB2D,IAkCRG,OAAQ,SAAAC,GAAW,OACf,cAACC,EAAA,EAAD,CAAQxB,UAAWH,EAAQF,qBAAsB8B,QAASF,EAAYE,QAAtE,6B,8CCpJL,I,iBCeTrD,EAAYC,YAAW,CAC3BC,UAAU,aACRC,MAAO,OACPC,OAAQ,OACRC,SAAU,WACVC,IAAK,OACLC,KAAM,OACNC,gBAAiB,QACjBC,OAAQ,GACRC,UAAW,iBACXC,QAAS,OACTC,eAAgB,eAChBC,SAAU,QACT,2BAA6B,CAC5BC,QAAS,OACTX,MAAO,OACPC,OAAQ,OACRC,SAAU,WACVC,IAAK,OACLC,KAAM,QAGVQ,eAAa,GACXJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZL,eAAgB,SAChBR,OAAQ,OACRD,MAAO,QANI,cAOV,2BAA6B,CAC5BC,OAAQ,OACRc,UAAW,WATF,cAWX,QAAS,CACPC,SAAU,KAZD,GAebC,gBAAc,GACZT,QAAS,OACTK,cAAe,SACfC,WAAY,SACZL,eAAgB,SAChBR,OAAQ,QALI,cAMX,2BAA6B,CAC5BA,OAAQ,SAPE,cASZ,QAAS,CACPI,gBAAiB,QACjBa,MAAO,QACPF,SAAU,GACVG,WAAY,IACZR,QAAS,YACTJ,UAAW,mBAfD,GAkBda,qBAAsB,CACpB,UAAW,CACTf,gBAAiB,QACjBa,MAAO,UAGXiC,WAAW,CACPC,OAAO,SACPpD,MAAM,IACNK,gBAAgB,QAChBa,MAAM,WAIG,SAASmC,IAEtB,IAAM/B,EAAUzB,IAChB,EAA6D0B,qBAAWpD,GAAjEQ,EAAP,EAAOA,UAAWI,EAAlB,EAAkBA,SAASC,EAA3B,EAA2BA,aAAcC,EAAzC,EAAyCA,gBACzC,EAAwCV,oBAAS,GAAjD,mBAAO+E,EAAP,KAAqBC,EAArB,KAEQC,EAAe,SAAfA,IAEA,IADF,IAAIC,EAAY,GACNC,EAAI,EAAGA,EAAI,EAAGA,IAClBD,GAAaE,OAAOC,KAAKC,MAAoB,EAAdD,KAAKE,WAExCtE,EAAO4C,KAAK,qBAAqBqB,GACjCjE,EAAOG,GAAG,4BAA2B,SAAA2C,GAEjC,GAAa,GAAVA,EAAgB,CACjB3D,EAAU2D,GAEVvD,IACAwD,cAAcvD,GACdD,EAAS,CAACyD,OAAO,UAAUC,QAAQ,4BAA4BC,KAAK,4CAAD,OAA6CJ,KAChH,IAAIM,EAAQC,YAAW,WACrB9D,MACC,KACHE,EAAgB2D,QAGdY,QA6ChB,OACE,mCACE,eAAChC,EAAA,EAAD,CAAKC,UAAWH,EAAQvB,UAAxB,UACE,eAACyB,EAAA,EAAD,CAAKC,UAAWH,EAAQV,cAAxB,UACE,cAACc,EAAA,EAAD,CAAYC,MAAO,CAAE3B,MAAO,OAAQgB,SAAU,GAAIL,QAAS,IAA3D,uDAGA,eAACiB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,6CACA,cAACA,EAAA,EAAD,4FAGF,cAACH,EAAA,EAAD,CAAYC,MAAO,CAAE3B,MAAO,OAAQgB,SAAU,GAAIL,QAAS,IAA3D,qDAGA,eAACiB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2EACA,cAACA,EAAA,EAAD,kEAIJ,eAACL,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CAAKC,UAAWH,EAAQL,eAAxB,SACE,cAACgC,EAAA,EAAD,CAAQxB,UAAWH,EAAQF,qBAAsB8B,QAAS,WAAKM,KAA/D,2BAIF,cAAChC,EAAA,EAAD,CAAKC,UAAWH,EAAQL,eAAxB,SACMqC,EACF,uBAAOS,KAAK,SAASnE,GAAG,iBAAiBoE,YAAY,aAAaC,SAAU,SAACC,GAnEtE,IAACtE,EACC,KADDA,EAmE0FsE,EAAMC,OAAO5E,OAlEjH6E,SACJ5E,EAAO4C,KAAK,mBAAmBxC,GAC/BJ,EAAOG,GAAG,0BAAyB,SAAA2C,GAE/B,GAAa,GAAVA,EAAgB,CACf3D,EAAU2D,GAEVvD,IACAwD,cAAcvD,GACdD,EAAS,CAACyD,OAAO,UAAUC,QAAQ,2BAA2BC,KAAK,2CAAD,OAA4CJ,KAC9G,IAAIM,EAAQC,YAAW,WACrB9D,MACC,KACHE,EAAgB2D,OAEd,CAEF7D,IACAwD,cAAcvD,GACdD,EAAS,CAACyD,OAAO,UAAUC,QAAQ,qBAAqBC,KAAK,cAAD,OAAe9C,EAAf,uBAC5D,IAAIgD,EAAQC,YAAW,WACrB9D,MACC,KACHE,EAAgB2D,SA2CsGnB,UAAWH,EAAQ6B,aAC5I,cAACF,EAAA,EAAD,CAAQxB,UAAWH,EAAQF,qBAAsB8B,QAAS,WArCnEK,GAAgB,GAChBV,YAAW,WACYwB,SAASC,eAAe,kBAChCC,UACZ,MAiCM,iC,qBCtLPC,EAAW1E,YAAW,CAE1B2E,YAAY,CACVC,WAAW,GACXC,SAAS,SACTC,WAAW,SACXC,aAAa,WACb7D,SAAS,GACT8D,WAAW,GAEbC,aAAa,CACXC,aAAa,GACbL,SAAS,SACT3E,MAAM,QACNC,OAAO,OACPO,QAAQ,OACRM,WAAW,SACXL,eAAe,UAEjBwE,OAAO,CACL5E,gBAAgB,QAChBa,MAAM,QACNV,QAAQ,OACRK,cAAc,SACdC,WAAW,SACXL,eAAe,SACfE,QAAQ,GACRuE,OAAO,qBAII,SAASC,EAAT,GAAmB,IAANC,EAAK,EAALA,GAEpB9D,EAAUkD,IAChB,EAA4BjG,oBAAS,GAArC,mBAAO0G,EAAP,KAAeI,EAAf,KAEE,OACI,qCAEA,cAAC7D,EAAA,EAAD,CAAKC,UAAWH,EAAQyD,aAAc7B,QAAS,WAAKmC,GAAU,IAA9D,SACM,qBAAKC,IAAKF,EAAGG,MAAOC,IAAI,GAAGxF,MAAM,OAAOC,OAAO,WAEjD,eAACuB,EAAA,EAAD,CAAKC,UAAWH,EAAQmD,YAAavB,QAAS,WAAKmC,GAAU,IAA7D,UACE,cAAC7D,EAAA,EAAD,UAAK,cAACE,EAAA,EAAD,CAAYD,UAAWH,EAAQmD,YAA/B,SAA6CW,EAAGK,SACrD,cAACjE,EAAA,EAAD,UAAK,cAACE,EAAA,EAAD,CAAYD,UAAWH,EAAQmD,YAA/B,SAA6CW,EAAGzC,aAI7D,cAAC+C,EAAA,EAAD,CAAQC,KAAMV,EAAQW,QAAS,kBAAIP,GAAU,IAA7C,SACE,eAAC7D,EAAA,EAAD,CAAKC,UAAWH,EAAQ2D,OAAxB,UACA,qBACIK,IAAKF,EAAGG,MACRC,IAAI,GACJxF,MAAM,QACNC,OAAO,UAEX,cAACyB,EAAA,EAAD,CAAYC,MAAO,CAACR,WAAW,IAAIH,SAAS,IAA5C,SAAmDoE,EAAGK,OACtD,cAAC/D,EAAA,EAAD,CAAYC,MAAO,CAACR,WAAW,IAAIH,SAAS,IAA5C,SAAmDoE,EAAGzC,gBCxD9D,IAAM6B,EAAW1E,YAAW,CAC1B+F,cAAe,CACbrF,QAAS,OACTM,WAAY,SACZH,QAAS,GACTyC,OAAQ,SACR0C,OAAQ,WAEVC,gBAAiB,CACff,aAAc,GACdL,SAAU,SACV3E,MAAO,OACPC,OAAQ,OACRO,QAAS,OACTM,WAAY,SACZL,eAAgB,SAChBuF,YAAa,IAEfC,eAAgB,CACdjF,SAAU,GACV2D,SAAU,SACVC,WAAY,SACZC,aAAc,YAEhBI,OAAO,CACL5E,gBAAgB,QAChBa,MAAM,QACNV,QAAQ,OACRK,cAAc,SACdC,WAAW,SACXL,eAAe,SACfE,QAAQ,GACRuE,OAAO,qBAII,SAASgB,EAAT,GAAwB,IAARC,EAAO,EAAPA,KACvB7E,EAAUkD,IAEhB,EAA4BjG,oBAAS,GAArC,mBAAO0G,EAAP,KAAeI,EAAf,KAEA,OACE,qCAAE,eAAC7D,EAAA,EAAD,CAAKC,UAAWH,EAAQuE,cAAe3C,QAAS,WAAKmC,GAAU,IAA/D,UACE,cAAC7D,EAAA,EAAD,CAAKC,UAAWH,EAAQyE,gBAAxB,SACE,qBACET,IAAKa,EAAKZ,MACVC,IAAI,GACJxF,MAAM,OACNC,OAAO,WAGX,cAACyB,EAAA,EAAD,CAAYD,UAAWH,EAAQ2E,eAA/B,SAAgDE,EAAKV,UAGvD,cAACC,EAAA,EAAD,CAAQC,KAAMV,EAAQW,QAAS,kBAAIP,GAAU,IAA7C,SACE,eAAC7D,EAAA,EAAD,CAAKC,UAAWH,EAAQ2D,OAAxB,UACA,qBACIK,IAAKa,EAAKZ,MACVC,IAAI,GACJxF,MAAM,QACNC,OAAO,UAEX,cAACyB,EAAA,EAAD,CAAYC,MAAO,CAACR,WAAW,IAAIH,SAAS,IAA5C,SAAmDmF,EAAKV,OACxD,cAAC/D,EAAA,EAAD,CAAYC,MAAO,CAACR,WAAW,IAAIH,SAAS,IAA5C,SAAmDmF,EAAKxD,gBChEhE,IAAM6B,EAAW1E,YAAW,CAC1BsG,WAAY,CACV5F,QAAS,OACTM,WAAY,SACZuF,SAAU,OACVjD,OAAQ,GACR/C,gBAAiB,QACjB2E,aAAc,GACdrE,QAAS,EACTJ,UAAW,kBAEb+F,eAAgB,CACdD,SAAU,OACV7F,QAAS,OACTK,cAAe,SACf0F,YAAa,IAEfC,mBAAoB,CAClBhG,QAAS,OACTC,eAAgB,gBAChBK,WAAY,UAEd2F,mBAAoB,CAClBJ,SAAU,OACV,MAAO,CACLK,QAAS,KAIbC,YAAa,CACXnG,QAAS,OACTK,cAAe,SACfwF,SAAU,OACVjD,OAAQ,GACR/C,gBAAiB,QACjBa,MAAO,QACP8D,aAAc,GACdrE,QAAS,EACTJ,UAAW,kBAGbqG,YAAa,CACX5F,SAAU,GACVE,MAAO,mBACPkC,OAAO,KAGI,SAASyD,EAAT,GAA2D,IAAnCC,EAAkC,EAAlCA,QAAS/C,EAAyB,EAAzBA,KAAMoC,EAAmB,EAAnBA,KAAKY,EAAc,EAAdA,KAAKxB,EAAS,EAATA,MAExDjE,EAAUkD,IAIhB,OACE,mCAIW,WAART,EACC,cAACvC,EAAA,EAAD,CAAKG,MAAO,CAAEnB,QAAS,OAAQC,eAAgB,UAA/C,SACE,cAACiB,EAAA,EAAD,CAAYD,UAAWH,EAAQsF,YAA/B,SAA6CE,MAErC,eAAR/C,EACF,cAACvC,EAAA,EAAD,CAAKG,MAAO,CAAEnB,QAAS,OAAQC,eAAgB,YAA/C,SACE,eAACe,EAAA,EAAD,CAAKC,UAAWH,EAAQqF,YAAxB,UACE,cAACnF,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAYC,MAAO,CAAEX,SAAU,GAAIE,MAAO,oBAA1C,SACG6F,MAGL,cAACvF,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAYC,MAAO,CAAEX,SAAU,GAAGgG,aAAc,cAAhD,SACGF,WAMT,cAACtF,EAAA,EAAD,CAAKG,MAAO,CAAEnB,QAAS,OAAQC,eAAgB,cAA/C,SACE,eAACe,EAAA,EAAD,CAAKC,UAAWH,EAAQ8E,WAAxB,UACE,qBACEd,IAAKC,EACLC,IAAI,GACJxF,MAAM,OACNC,OAAO,SAET,eAACuB,EAAA,EAAD,CAAKC,UAAWH,EAAQgF,eAAxB,UACE,eAAC9E,EAAA,EAAD,CAAKC,UAAWH,EAAQkF,mBAAxB,UACE,cAAC9E,EAAA,EAAD,CACEC,MAAO,CAAEX,SAAU,GAAIE,MAAO,sBADhC,SAGGiF,EAAKV,OAER,cAAC/D,EAAA,EAAD,CACEC,MAAO,CAAEX,SAAU,GAAIE,MAAO,qBAAsBwD,WAAW,IADjE,SAGGqC,OAGL,cAACvF,EAAA,EAAD,CAAKC,UAAWH,EAAQmF,mBAAxB,SACE,cAAC/E,EAAA,EAAD,CAAYC,MAAO,CAACqF,aAAc,cAAlC,SACGF,gB,qBChGbtC,EAAW1E,YAAW,CAE1BmH,KAAK,CACHzG,QAAQ,OACRM,WAAW,SACXL,eAAe,gBAEjByG,UAAU,CACRlH,MAAM,OACNoD,OAAO,EACP4B,aAAa,EACbrE,QAAQ,EACRK,SAAS,IAEXmG,WAAW,CACTnB,YAAY,MAID,SAASoB,IAEtB,IAAMC,EAAiB,WACrB,IAAMC,EAAQjD,SAASC,eAAe,SACtC9E,EAAO4C,KAAK,cAAckF,EAAM/H,OAChC+H,EAAM/H,MAAQ,GACd+H,EAAM/C,SAGFjD,EAAUkD,IAEd,OACI,mCACC,eAAChD,EAAA,EAAD,CAAKC,UAAWH,EAAQ2F,KAAxB,UACK,uBAAOxF,UAAWH,EAAQ4F,UAAWtH,GAAG,QAAQmE,KAAK,OAAOC,YAAY,uBAAuBuD,WAAY,SAACrD,GAAD,MAAuB,SAAbA,EAAMsD,IAAgBH,IAAiB,QAC5J,eAACpE,EAAA,EAAD,CAAQxB,UAAWH,EAAQ6F,WAAYjE,QAAS,kBAAImE,KAAkBI,QAAQ,WAAWvG,MAAM,UAA/F,kBACO,cAAC,IAAD,YCjCrB,IAAMsD,EAAW1E,YAAW,CAC1BC,UAAW,CACTS,QAAS,OACTN,SAAU,WACVO,eAAgB,gBAChBN,IAAK,OACLC,KAAM,MACNJ,MAAO,OACPC,OAAQ,OACRK,OAAQ,IAEVoH,cAAe,CACblH,QAAS,OACTK,cAAe,SACfJ,eAAgB,gBAChBT,MAAO,OACPC,OAAQ,QAEV0H,eAAgB,CACdnH,QAAS,OACTK,cAAe,SACfJ,eAAgB,gBAChBT,MAAO,OACPC,OAAQ,QAEV2H,QAAS,CACPvB,SAAU,OACVpG,OAAQ,OACRI,gBAAiB,cACjBE,UAAW,uBACXyE,aAAc,GACd9D,MAAO,QACPV,QAAS,OACTM,WAAY,WACZL,eAAgB,eAChBE,QAAS,GACTmF,OAAO,WAET+B,WAAY,CACV7H,MAAO,OACPO,UAAW,uBACXN,OAAQ,OACR+E,aAAc,GACd3E,gBAAiB,cACjByH,UAAW,UAEbC,SAAU,CACR/H,MAAO,OACPO,UAAW,uBACXN,OAAQ,MACR+E,aAAc,GACd3E,gBAAiB,cACjByH,UAAW,SACX5C,OAAO,mBAET8C,YAAa,CACXhI,MAAO,OACPO,UAAW,uBACXyE,aAAc,GACd/E,OAAQ,MACRI,gBAAiB,iBAMjB+E,EAAK,KAEM,SAAS6C,IACtB,MAAiH1G,qBAAWpD,GAApHK,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,OAAOQ,EAAxB,EAAwBA,SAASC,EAAjC,EAAiCA,YAAaC,EAA9C,EAA8CA,UAAWC,EAAzD,EAAyDA,aAAcN,EAAvE,EAAuEA,SAASC,EAAhF,EAAgFA,aAAcC,EAA9F,EAA8FA,gBACxFqC,EAAUkD,IA8BhB,OA5BA0D,qBAAU,WACR1I,EAAO4C,KAAK,cAAe,CAAE5D,UAASE,WAEtCc,EAAOG,GAAG,WAAW,SAACwI,GACpBhJ,GAAY,SAAAD,GAAQ,4BAAQA,GAAR,CAAiBiJ,OACrC,IAAIC,EAAgB/D,SAASC,eAAe,iBAE5C,GADA8D,EAAcC,UAAYD,EAAcE,aACN,GAA/BH,EAAYI,gBAAwB,CACrCxJ,IACJwD,cAAcvD,GACdD,EAAS,CAACyD,OAAO,OAAOC,QAAQ0F,EAAYrB,QAAQpE,KAAK,KACzD,IAAIE,EAAQC,YAAW,WACrB9D,MACC,KACHE,EAAgB2D,OAIhBpD,EAAOG,GAAG,aAAY,SAAC6I,GACrBnJ,EAAamJ,MAGfhJ,EAAOG,GAAG,UAAS,SAACwG,GAClBf,EAAKe,OAGN,IAGD,mCACE,eAAC3E,EAAA,EAAD,CAAKC,UAAWH,EAAQvB,UAAxB,UAEE,eAACyB,EAAA,EAAD,CAAKC,UAAWH,EAAQoG,cAAxB,UAEE,cAAClG,EAAA,EAAD,CAAKC,UAAWH,EAAQsG,QAAxB,SACGxC,EAAG,cAACD,EAAD,CAAIC,GAAIA,IAAM,OAGpB,cAAC5D,EAAA,EAAD,CAAKC,UAAWH,EAAQuG,WAAxB,SAEIzI,EAAUqJ,KAAI,SAACtC,GAAD,OAAQ,cAACD,EAAD,CAAOC,KAAMA,YAKzC,eAAC3E,EAAA,EAAD,CAAKC,UAAWH,EAAQqG,eAAxB,UACE,cAACnG,EAAA,EAAD,CAAKC,UAAWH,EAAQyG,SAAUnI,GAAG,gBAArC,SAEIV,EAASuJ,KAAI,SAACC,GAAD,OAAQ,cAAC7B,EAAD,CAAcC,QAAS4B,EAAK5B,QAAS/C,KAAM2E,EAAK3E,KAAMoC,KAAMuC,EAAKvC,KAAMY,KAAM2B,EAAK3B,KAAMxB,MAAOmD,EAAKnD,MAAOgD,gBAAiBG,EAAKH,uBAK1J,cAAC/G,EAAA,EAAD,CAAKC,UAAWH,EAAQ0G,YAAxB,SACE,cAAC,EAAD,cCpHZ,IAAMxD,EAAW1E,YAAW,CAC1BC,UAAW,CACTM,gBAAiB,UACjBJ,OAAQ,OACRK,OAAQ,IAEVoC,KAAM,CACJvB,WAAY,IACZH,SAAU,GACVL,QAAS,GACTgI,WAAY,iCACZnI,QAAS,OACTM,WAAY,SACZD,cAAe,UAEjB+H,KAAM,CACJ5H,SAAU,GACV0D,WAAY,IAEdmE,cAAe,CACbrI,QAAS,OACTC,eAAgB,iBAElBqI,OAAQ,CACNC,aAAc,GACd/H,SAAU,GACV8E,OAAQ,UACRtF,QAAS,OACTM,WAAY,UAEdhC,MAAO,CACLkH,YAAa,GACb3F,gBAAiB,QACjBa,MAAO,QACPF,SAAU,GACVgI,aAAc,MAIH,SAASC,IACtB,IAAM3H,EAAUkD,IAChB,EASIjD,qBAAWpD,GARbK,EADF,EACEA,QACAE,EAFF,EAEEA,OAGAI,GALF,EAGEF,MAHF,EAIEC,SAJF,EAKEC,OALF,EAMEC,SANF,EAOEC,aAPF,EAQEC,gBAmBF,OACE,mCACE,eAACuC,EAAA,EAAD,WACE,cAAC0H,EAAA,EAAD,CAAQzH,UAAWH,EAAQvB,UAA3B,SACE,eAACoJ,EAAA,EAAD,CAAS1H,UAAWH,EAAQuH,cAA5B,UACE,eAACnH,EAAA,EAAD,CAAY0H,UAAU,KAAK3H,UAAWH,EAAQoB,KAA9C,UACE,eAAClB,EAAA,EAAD,CAAKG,MAAO,CAAEnB,QAAS,OAAQM,WAAY,UAA3C,qBAEE,cAAC,IAAD,CAAcW,UAAWH,EAAQsH,UAEnC,cAACpH,EAAA,EAAD,CAAKG,MAAO,CAAEX,SAAU,IAAxB,SACGtC,EAAM,mBAAeA,GAAW,QAIrC,eAACgD,EAAA,EAAD,CAAYD,UAAWH,EAAQwH,OAA/B,UACGhK,EACC,eAACuK,EAAA,EAAD,CAAOC,SAAUxK,EAAM0D,OAAQf,UAAWH,EAAQxC,MAAlD,UACE,cAACyK,EAAA,EAAD,CAAY5H,MAAO,CAAEX,SAAU,IAA/B,SACGlC,EAAM2D,UAFX,cAIc3D,EAAM0D,OAJpB,gBAIoC,IAClC,iCAAS1D,EAAM4D,UAEf,KACJ,cAAClB,EAAA,EAAD,CACEG,MAAO,CACLnB,QAAS,OACTK,cAAe,SACfC,WAAY,UAJhB,SAOGtC,EACC,cAACyE,EAAA,EAAD,CACEwE,QAAQ,YAER9F,MAAO,CAAEqH,aAAc,IAHzB,SAKE,mBAAGQ,KAAK,IAAI7H,MAAO,CAAC8H,eAAe,OAAQvI,MAAM,SAAjD,wBAEA,eAQXxC,EAAS,cAACuJ,EAAD,IAAWzJ,EAAU,cAAC6E,EAAD,IAAY,cAAChC,EAAD,SC1HpCqI,MAVf,WACE,OACE,mCACA,cAACrL,EAAD,UACE,cAAC4K,EAAD,SCISU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASrH,OACP,cAAC,IAAMsH,WAAP,UACE,cAAC,EAAD,MAEFhG,SAASC,eAAe,SAM1BqF,K","file":"static/js/main.ac73f20b.chunk.js","sourcesContent":["import {React, createContext, useState} from 'react';\r\n\r\nexport const AccountContext = createContext(null);\r\n\r\n\r\nexport default function AccountProvider({children}) {\r\n\r\n    const [account, setaccount] = useState()\r\n    const [roomId, setroomid] = useState()\r\n    const [sound, setsound] = useState(true)\r\n    const [alert, setalert] = useState()\r\n    const [alertTimeout, setalerttimeout] = useState()\r\n\r\n    const [messages, setmessages] = useState([])\r\n    const [roomUsers, setroomusers] = useState([])\r\n    \r\n    return (\r\n        <>\r\n            <AccountContext.Provider\r\n            value={{\r\n                account,\r\n                setaccount,\r\n                \r\n                roomId,\r\n                setroomid,\r\n\r\n                sound,\r\n                setsound,\r\n\r\n                alert,\r\n                setalert,\r\n                \r\n                alertTimeout,\r\n                setalerttimeout,\r\n\r\n                messages,\r\n                setmessages,\r\n\r\n                roomUsers,\r\n                 setroomusers\r\n            }}\r\n            >\r\n                {children}\r\n            </AccountContext.Provider>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { io } from 'socket.io-client';\r\n\r\nconst ENDPOINT = 'http://localhost:3001/';\r\n\r\nexport const socket = io(ENDPOINT, { transports : ['websocket'] });\r\nexport let socketID = '';\r\n\r\n\r\nsocket.on('connect', () => {\r\n    socketID = socket.id\r\n})\r\n","import React,{useContext} from 'react';\r\n\r\nimport { makeStyles, Box, Typography, List, ListItem, Button } from '@material-ui/core';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { AccountContext } from '../../context/AccountProvider';\r\n\r\nimport { socket } from '../../socket/Socket';\r\n\r\nconst useStyles = makeStyles({\r\n    container:{\r\n        width:\"70vw\",\r\n        height:\"70vh\",\r\n        position: 'absolute',\r\n        top:\"20vh\",\r\n        left:\"15vw\",\r\n        backgroundColor:\"white\",\r\n        zIndex:20,\r\n        boxShadow:\"0 0 20px black\",\r\n        display:\"flex\",\r\n        justifyContent:\"space-around\",\r\n        flexWrap:\"wrap\",\r\n        ['@media (max-width:620px)']:{\r\n            padding:\"10px\",\r\n            width:\"80vw\",\r\n            height:\"60vh\",\r\n            position: 'absolute',\r\n            top:\"20vh\",\r\n            left:\"8vw\",\r\n        }\r\n    },\r\n    leftComponent:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n        height:\"50vh\",\r\n        ['@media (max-width:620px)']:{\r\n            height:\"40vh\",\r\n            textAlign:\"center\",\r\n        },\r\n        \"& > *\":{\r\n            fontSize:20,\r\n        }\r\n    },\r\n    rightComponent:{\r\n        display:\"flex\",\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n        height:\"50vh\",\r\n        ['@media (max-width:620px)']:{\r\n            height:\"10vh\",\r\n        },\r\n        \"& > *\":{\r\n            backgroundColor:\"black\",\r\n            color:\"white\",\r\n            fontSize:20,\r\n            fontWeight:600,\r\n            padding:\"10px 30px\",\r\n            boxShadow:\"0 0 10px black\",\r\n        },\r\n    },\r\n    rightComponentButton:{\r\n        \"&:hover\":{\r\n            backgroundColor:\"white\",\r\n            color:\"black\",\r\n        }\r\n    }\r\n})\r\n\r\nexport default function Login() {\r\n\r\n    const classes = useStyles();\r\n    const clintId = '886494164586-c8g32taobbk671mb6ue10nljhrevfj0h.apps.googleusercontent.com';\r\n\r\n    const { setaccount, setalert,alertTimeout, setalerttimeout} = useContext(AccountContext)\r\n\r\n    const onLoginSuccess = (res)=>{\r\n        socket.emit('verificationProfile',res.profileObj);\r\n        socket.on('verificationProfileResult',result=>{\r\n            if(result != false){\r\n                setaccount(result);\r\n\r\n                setalert()\r\n                clearInterval(alertTimeout)\r\n                setalert({status:\"success\",heading:\"Successful Login\",text:`You are SUCCESSFULLY Login in JinTalks with Email Id ${res.profileObj.email}`})\r\n                let clear = setTimeout(() => {\r\n                  setalert()\r\n                }, 8000);\r\n                setalerttimeout(clear);\r\n            }\r\n            else{\r\n                setaccount(result);\r\n\r\n                setalert()\r\n                clearInterval(alertTimeout)\r\n                setalert({status:\"error\",heading:\"Login Failed\",text:`You are already logged in with this Email Id ${res.profileObj.email}`})\r\n                let clear = setTimeout(() => {\r\n                  setalert()\r\n                }, 8000);\r\n                setalerttimeout(clear);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const onLoginFail = ()=>{\r\n        \r\n        setalert()\r\n        clearInterval(alertTimeout)\r\n        setalert({status:\"error\",heading:\"Login Failed\",text:`Loging has Failed, Please try again`})\r\n        let clear = setTimeout(() => {\r\n          setalert()\r\n        }, 8000);\r\n        setalerttimeout(clear);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Box className={classes.container}>\r\n            <Box className={classes.leftComponent}>\r\n                <Typography style={{width:\"100%\", fontSize:30, padding:20}}>\r\n                    To use JinTalks in your Computer:\r\n                </Typography>\r\n                <List>\r\n                    <ListItem>\r\n                        1. Click on Login Button on your Right\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        2. Login with Email Id\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        3. Join or Create Room\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        4. Enjoy Room Chat with Friends \r\n                    </ListItem>\r\n                </List>\r\n            </Box>\r\n            <Box className={classes.rightComponent}>\r\n                \r\n                <GoogleLogin\r\n                clientId={clintId}\r\n                buttonText=\"\"\r\n                cookiePolicy={'single_host_origin'}\r\n                isSignedIn={true}\r\n                onSuccess={onLoginSuccess}\r\n                onFailure={onLoginFail}\r\n                render={renderProps => (\r\n                    <Button className={classes.rightComponentButton} onClick={renderProps.onClick}>Login</Button>\r\n                  )}\r\n                />\r\n            </Box>\r\n        </Box> \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n// 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\r\n// clint secret","export default __webpack_public_path__ + \"static/media/alert.71875f38.mp3\";","import React,{useContext, useState, useEffect} from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n} from \"@material-ui/core\";\r\nimport { AccountContext } from '../../context/AccountProvider';\r\n\r\nimport { socket } from '../../socket/Socket';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    width: \"70vw\",\r\n    height: \"70vh\",\r\n    position: \"absolute\",\r\n    top: \"20vh\",\r\n    left: \"15vw\",\r\n    backgroundColor: \"white\",\r\n    zIndex: 20,\r\n    boxShadow: \"0 0 20px black\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:620px)\"]: {\r\n      padding: \"10px\",\r\n      width: \"80vw\",\r\n      height: \"60vh\",\r\n      position: \"absolute\",\r\n      top: \"20vh\",\r\n      left: \"8vw\",\r\n    },\r\n  },\r\n  leftComponent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"70vh\",\r\n    width: \"40vw\",\r\n    [\"@media (max-width:620px)\"]: {\r\n      height: \"40vh\",\r\n      textAlign: \"center\",\r\n    },\r\n    \"& > *\": {\r\n      fontSize: 18,\r\n    },\r\n  },\r\n  rightComponent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"35vh\",\r\n    [\"@media (max-width:620px)\"]: {\r\n      height: \"10vh\",\r\n    },\r\n    \"& > *\": {\r\n      backgroundColor: \"black\",\r\n      color: \"white\",\r\n      fontSize: 20,\r\n      fontWeight: 600,\r\n      padding: \"10px 30px\",\r\n      boxShadow: \"0 0 10px black\",\r\n    },\r\n  },\r\n  rightComponentButton: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"white\",\r\n      color: \"black\",\r\n    },\r\n  },\r\n  rightInput:{\r\n      margin:\"20px 0\",\r\n      width:150,\r\n      backgroundColor:\"white\",\r\n      color:\"black\"\r\n  }\r\n});\r\n\r\nexport default function Entry() {\r\n\r\n  const classes = useStyles();\r\n  const {setroomid, setalert,alertTimeout, setalerttimeout } = useContext(AccountContext);\r\n  const [showInputBox, setshowinputbox] = useState(false)\r\n\r\n    const createRoomId = ()=>{\r\n        let randomNum = \"\";\r\n          for(let i = 0; i < 4; i++){\r\n              randomNum += String(Math.floor(Math.random()*4));\r\n          }\r\n          socket.emit('verificationCreate',randomNum);\r\n          socket.on('verificationCreateResult',result=>{\r\n              \r\n              if(result != false){\r\n                setroomid(result);\r\n\r\n                setalert()\r\n                clearInterval(alertTimeout)\r\n                setalert({status:\"success\",heading:\"Room Created Successfully\",text:`You Successfully created the Room of Id: ${result}`})\r\n                let clear = setTimeout(() => {\r\n                  setalert()\r\n                }, 5000);\r\n                setalerttimeout(clear);\r\n              }\r\n              else{\r\n                  createRoomId();\r\n              }\r\n          })\r\n      }\r\n  \r\n \r\n\r\n  const joinRoomId = (id)=>{\r\n      if(id.length === 4){\r\n        socket.emit('verificationJoin',id);\r\n        socket.on('verificationJoinResult',result=>{\r\n\r\n            if(result != false){\r\n                setroomid(result);\r\n                \r\n                setalert()\r\n                clearInterval(alertTimeout)\r\n                setalert({status:\"success\",heading:\"Joined Room Successfully\",text:`You Successfully joined the Room of Id: ${result}`})\r\n                let clear = setTimeout(() => {\r\n                  setalert()\r\n                }, 5000);\r\n                setalerttimeout(clear);\r\n              }\r\n              else{\r\n                \r\n                setalert()\r\n                clearInterval(alertTimeout)\r\n                setalert({status:\"warning\",heading:\"Room Not Available\",text:`Room of Id ${id} is not Available`})\r\n                let clear = setTimeout(() => {\r\n                  setalert()\r\n                }, 5000);\r\n                setalerttimeout(clear);\r\n              }\r\n        })\r\n      }\r\n  }\r\n\r\n  const showInput = ()=>{\r\n    setshowinputbox(true)\r\n    setTimeout(() => {\r\n    const joinInputBoxId = document.getElementById('joinInputBoxId');\r\n    joinInputBoxId.focus();\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.container}>\r\n        <Box className={classes.leftComponent}>\r\n          <Typography style={{ width: \"100%\", fontSize: 25, padding: 20 }}>\r\n            To Create JinTalks Room in your Computer:\r\n          </Typography>\r\n          <List>\r\n            <ListItem>1. Click on Create Room Button</ListItem>\r\n            <ListItem>2. You will get a Room Id, Share Room Id with your friends and Invite them</ListItem>\r\n           \r\n          </List>\r\n          <Typography style={{ width: \"100%\", fontSize: 25, padding: 20 }}>\r\n            To Join JinTalks Room in your Computer:\r\n          </Typography>\r\n          <List>\r\n            <ListItem>1. Click on Join Room and Enter Room Id inside the Input Box</ListItem>\r\n            <ListItem>2. You get Enter into Room of Id you Inserted</ListItem>\r\n          \r\n          </List>\r\n        </Box>\r\n        <Box>\r\n          <Box className={classes.rightComponent}>\r\n            <Button className={classes.rightComponentButton} onClick={()=>{createRoomId()}}>\r\n              Create Room\r\n            </Button>\r\n          </Box>\r\n          <Box className={classes.rightComponent}>\r\n              { showInputBox?\r\n              <input type=\"number\" id=\"joinInputBoxId\" placeholder=\"Room Id...\" onChange={(event)=>{ joinRoomId(event.target.value)}} className={classes.rightInput}/>\r\n            :<Button className={classes.rightComponentButton} onClick={()=>{showInput()}}>Join Room</Button>\r\n              }\r\n            </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\nimport { Box, makeStyles, Typography, Dialog } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles({\r\n\r\n  leftTopText:{\r\n    marginLeft:10,\r\n    overflow:\"hidden\",\r\n    whiteSpace:\"nowrap\",\r\n    textOverflow:\"ellipsis\",\r\n    fontSize:20,\r\n    lineHeight:2,\r\n  },\r\n  leftTopImage:{\r\n    borderRadius:10,\r\n    overflow:\"hidden\",\r\n    width:\"100px\",\r\n    height:\"80px\",\r\n    display:\"flex\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n  },\r\n  dialog:{\r\n    backgroundColor:\"black\",\r\n    color:\"white\",\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    padding:40,\r\n    border:\"1px solid white\"\r\n  }\r\n});\r\n\r\nexport default function Me({me}) {\r\n\r\n  const classes = useStyle();\r\n  const [dialog, setdialog] = useState(false)\r\n\r\n    return (\r\n        <>\r\n        \r\n        <Box className={classes.leftTopImage} onClick={()=>{setdialog(true)}}>\r\n              <img src={me.image} alt=\"\" width=\"80px\" height=\"80px\"/>\r\n            </Box>\r\n            <Box className={classes.leftTopText} onClick={()=>{setdialog(true)}}>\r\n              <Box><Typography className={classes.leftTopText}>{me.name}</Typography></Box>\r\n              <Box><Typography className={classes.leftTopText}>{me.email}</Typography></Box>\r\n            </Box>\r\n            \r\n            \r\n      <Dialog open={dialog} onClose={()=>setdialog(false)}>\r\n        <Box className={classes.dialog}>\r\n        <img\r\n            src={me.image}\r\n            alt=\"\"\r\n            width=\"300px\"\r\n            height=\"300px\"\r\n          />\r\n        <Typography style={{fontWeight:600,fontSize:30}} >{me.name}</Typography>\r\n        <Typography style={{fontWeight:600,fontSize:30}} >{me.email}</Typography>\r\n        </Box>\r\n      </Dialog>\r\n        </>\r\n    )\r\n}\r\n","import React,{useState} from \"react\";\r\n\r\nimport { Box, makeStyles, Typography , Dialog} from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles({\r\n  leftBottomBox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    margin: \"10px 0\",\r\n    cursor: \"pointer\",\r\n  },\r\n  leftBottomImage: {\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginRight: 10,\r\n  },\r\n  leftBottomText: {\r\n    fontSize: 20,\r\n    overflow: \"hidden\",\r\n    whiteSpace: \"nowrap\",\r\n    textOverflow: \"ellipsis\",\r\n  },\r\n  dialog:{\r\n    backgroundColor:\"black\",\r\n    color:\"white\",\r\n    display:\"flex\",\r\n    flexDirection:\"column\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    padding:40,\r\n    border:\"1px solid white\"\r\n  }\r\n});\r\n\r\nexport default function Users({user}) {\r\n  const classes = useStyle();\r\n\r\n  const [dialog, setdialog] = useState(false)\r\n\r\n  return (\r\n    <><Box className={classes.leftBottomBox} onClick={()=>{setdialog(true)}}>\r\n        <Box className={classes.leftBottomImage}>\r\n          <img\r\n            src={user.image}\r\n            alt=\"\"\r\n            width=\"50px\"\r\n            height=\"50px\"\r\n          />\r\n        </Box>\r\n        <Typography className={classes.leftBottomText}>{user.name}</Typography>\r\n      </Box>\r\n\r\n      <Dialog open={dialog} onClose={()=>setdialog(false)}>\r\n        <Box className={classes.dialog}>\r\n        <img\r\n            src={user.image}\r\n            alt=\"\"\r\n            width=\"300px\"\r\n            height=\"300px\"\r\n          />\r\n        <Typography style={{fontWeight:600,fontSize:30}} >{user.name}</Typography>\r\n        <Typography style={{fontWeight:600,fontSize:30}} >{user.email}</Typography>\r\n        </Box>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React,{useContext} from \"react\";\r\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles({\r\n  getMessage: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    maxWidth: \"50vw\",\r\n    margin: 10,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    padding: 5,\r\n    boxShadow: \"0 0 10px black\",\r\n  },\r\n  getMessageText: {\r\n    maxWidth: \"40vw\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingLeft: 10,\r\n  },\r\n  getMessageTextData: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  getMessageTextChat: {\r\n    maxWidth: \"50vw\",\r\n    \"&>*\": {\r\n      fonSize: 15,\r\n    },\r\n  },\r\n\r\n  sendMessage: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    maxWidth: \"50vw\",\r\n    margin: 10,\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    borderRadius: 10,\r\n    padding: 5,\r\n    boxShadow: \"0 0 10px white\",\r\n  },\r\n\r\n  formalities: {\r\n    fontSize: 15,\r\n    color: \"rgb(120,120,120)\",\r\n    margin:5\r\n  },\r\n});\r\nexport default function TextMessages({ message, type, user,time,image }) {\r\n\r\n  const classes = useStyle();\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n    {/* {\r\n      (forAlertPurpose)?callAlert(message):null\r\n    } */}\r\n      {type == \"message\" ? (\r\n        <Box style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Typography className={classes.formalities}>{message}</Typography>\r\n        </Box>\r\n      ) : type == \"messageSend\" ? (\r\n        <Box style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          <Box className={classes.sendMessage}>\r\n            <Box>\r\n              <Typography style={{ fontSize: 13, color: \"rgb(182,182,182)\" }}>\r\n                {time}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography style={{ fontSize: 15,overflowWrap: \"break-word\", }}>\r\n                {message}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Box style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\r\n          <Box className={classes.getMessage}>\r\n            <img\r\n              src={image}\r\n              alt=\"\"\r\n              width=\"30px\"\r\n              height=\"30px\"\r\n            />\r\n            <Box className={classes.getMessageText}>\r\n              <Box className={classes.getMessageTextData}>\r\n                <Typography\r\n                  style={{ fontSize: 15, color: \"rgb(120, 120, 120)\" }}\r\n                >\r\n                  {user.name}\r\n                </Typography>\r\n                <Typography\r\n                  style={{ fontSize: 13, color: \"rgb(120, 120, 120)\", marginLeft:10 }}\r\n                >\r\n                  {time}\r\n                </Typography>\r\n              </Box>\r\n              <Box className={classes.getMessageTextChat}>\r\n                <Typography style={{overflowWrap: \"break-word\", }}>\r\n                  {message}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport { socket } from '../../socket/Socket';\r\n\r\nconst useStyle = makeStyles({\r\n\r\n  send:{\r\n    display:\"flex\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"space-around\"\r\n  },\r\n  sendInput:{\r\n    width:\"100%\",\r\n    margin:7,\r\n    borderRadius:5,\r\n    padding:6,\r\n    fontSize:18,\r\n  },\r\n  sendButton:{\r\n    marginRight:10,\r\n  }\r\n});\r\n\r\nexport default function Send() {\r\n\r\n  const sendMessageFun = ()=>{\r\n    const input = document.getElementById('input');\r\n    socket.emit('messageSend',input.value);\r\n    input.value = '';\r\n    input.focus();\r\n  }\r\n\r\n  const classes = useStyle();\r\n\r\n    return (\r\n        <>\r\n         <Box className={classes.send}>\r\n              <input className={classes.sendInput} id=\"input\" type=\"text\" placeholder=\"Type Message here...\" onKeyPress={(event)=> event.key == 'Enter'? sendMessageFun():null}/>\r\n              <Button className={classes.sendButton} onClick={()=>sendMessageFun()} variant=\"outlined\" color=\"primary\">\r\n                Send <SendIcon/>\r\n              </Button>\r\n            </Box>\r\n               \r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { AccountContext } from \"../context/AccountProvider\";\r\nimport Me from \"./chat components/Me\";\r\nimport Users from \"./chat components/Users\";\r\nimport TextMessages from \"./chat components/TextMessages\";\r\nimport Send from \"./chat components/Send\";\r\n\r\nimport { socket } from \"../socket/Socket\";\r\nimport { Box, makeStyles, Typography, Dialog } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    position: \"absolute\",\r\n    justifyContent: \"space-between\",\r\n    top: \"20vh\",\r\n    left: \"2vw\",\r\n    width: \"96vw\",\r\n    height: \"75vh\",\r\n    zIndex: 20,\r\n  },\r\n  containerLeft: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    width: \"25vw\",\r\n    height: \"75vh\",\r\n  },\r\n  containerRight: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    width: \"69vw\",\r\n    height: \"100%\",\r\n  },\r\n  leftTop: {\r\n    maxWidth: \"25vw\",\r\n    height: \"16vh\",\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"10px 10px 20px black\",\r\n    borderRadius: 10,\r\n    color: \"white\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-end\",\r\n    justifyContent: \"space-around\",\r\n    padding: 10,\r\n    cursor:\"pointer\",\r\n  },\r\n  leftBottom: {\r\n    width: \"100%\",\r\n    boxShadow: \"10px 10px 20px black\",\r\n    height: \"50vh\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"transparent\",\r\n    overflowY: \"scroll\",\r\n  },\r\n  rightTop: {\r\n    width: \"100%\",\r\n    boxShadow: \"10px 10px 20px black\",\r\n    height: \"85%\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"transparent\",\r\n    overflowY: \"scroll\",\r\n    border:\"1px solid white\",\r\n  },\r\n  rightBottom: {\r\n    width: \"100%\",\r\n    boxShadow: \"10px 10px 20px black\",\r\n    borderRadius: 10,\r\n    height: \"10%\",\r\n    backgroundColor: \"transparent\",\r\n  },\r\n\r\n\r\n});\r\n\r\nlet me = null;\r\n\r\nexport default function Chat() {\r\n  const { account, roomId,messages,setmessages ,roomUsers, setroomusers ,setalert,alertTimeout, setalerttimeout} = useContext(AccountContext);\r\n  const classes = useStyle();\r\n\r\n  useEffect(() => {\r\n    socket.emit(\"formalities\", { account, roomId });\r\n\r\n    socket.on(\"message\", (messageData) => {\r\n      setmessages(messages => [...messages,messageData]);\r\n      let forScrollDown = document.getElementById('forScrollDown');\r\n      forScrollDown.scrollTop = forScrollDown.scrollHeight;\r\n      if(messageData.forAlertPurpose == true){\r\n        setalert()\r\n    clearInterval(alertTimeout)\r\n    setalert({status:\"info\",heading:messageData.message,text:``})\r\n    let clear = setTimeout(() => {\r\n      setalert()\r\n    }, 3000);\r\n    setalerttimeout(clear);\r\n      }\r\n    });\r\n\r\n    socket.on('roomUsers',(users)=>{\r\n      setroomusers(users);\r\n    });\r\n\r\n    socket.on('myself',(user)=>{\r\n      me = user;\r\n    })\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.container}>\r\n\r\n        <Box className={classes.containerLeft}>\r\n\r\n          <Box className={classes.leftTop}>\r\n            {me?<Me me={me}/>:null}\r\n          </Box>\r\n\r\n          <Box className={classes.leftBottom}>\r\n            {\r\n              roomUsers.map((user)=><Users user={user}/>)\r\n            }\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box className={classes.containerRight}>\r\n          <Box className={classes.rightTop} id='forScrollDown'>\r\n            {\r\n              messages.map((data)=><TextMessages message={data.message} type={data.type} user={data.user} time={data.time} image={data.image} forAlertPurpose={data.forAlertPurpose}/>)\r\n\r\n            }\r\n          </Box>\r\n\r\n          <Box className={classes.rightBottom}>\r\n            <Send/>\r\n          </Box>\r\n\r\n        </Box>\r\n\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport Login from \"./account/Login\";\r\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOff\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nimport AlertSound from './sound/alert.mp3'\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Toolbar,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { AccountContext } from \"../context/AccountProvider\";\r\nimport Entry from \"./account/Entry\";\r\nimport Chat from \"./Chat\";\r\n\r\nconst useStyle = makeStyles({\r\n  container: {\r\n    backgroundColor: \"#000000\",\r\n    height: \"40vh\",\r\n    zIndex: 10,\r\n  },\r\n  text: {\r\n    fontWeight: 600,\r\n    fontSize: 40,\r\n    padding: 30,\r\n    fontFamily: \"'Architects Daughter', cursive\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  icon: {\r\n    fontSize: 50,\r\n    marginLeft: 10,\r\n  },\r\n  subCcontainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    paddingRight: 30,\r\n    fontSize: 40,\r\n    cursor: \"pointer\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  alert: {\r\n    marginRight: 20,\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default function Messanger() {\r\n  const classes = useStyle();\r\n  const {\r\n    account,\r\n    roomId,\r\n    sound,\r\n    setsound,\r\n    alert,\r\n    setalert,\r\n    alertTimeout,\r\n    setalerttimeout,\r\n  } = useContext(AccountContext);\r\n\r\n  const soundFun = () => {\r\n    sound ? setsound(false) : setsound(true);\r\n\r\n    setalert();\r\n    clearInterval(alertTimeout);\r\n    setalert({\r\n      status: \"info\",\r\n      heading: \"Sound Status\",\r\n      text: !sound ? \"Sound is turned ON\" : \"Sound is turned OFF\",\r\n    });\r\n    let clear = setTimeout(() => {\r\n      setalert();\r\n    }, 3000);\r\n    setalerttimeout(clear);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <AppBar className={classes.container}>\r\n          <Toolbar className={classes.subCcontainer}>\r\n            <Typography component=\"h2\" className={classes.text}>\r\n              <Box style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                JinTalks\r\n                <WhatsAppIcon className={classes.icon} />\r\n              </Box>\r\n              <Box style={{ fontSize: 30 }}>\r\n                {roomId ? `Room Id: ${roomId}` : \"\"}\r\n              </Box>\r\n            </Typography>\r\n\r\n            <Typography className={classes.button}>\r\n              {alert ? (\r\n                <Alert severity={alert.status} className={classes.alert}>\r\n                  <AlertTitle style={{ fontSize: 20 }}>\r\n                    {alert.heading}\r\n                  </AlertTitle>\r\n                  This is an {alert.status} alert —{\" \"}\r\n                  <strong>{alert.text}</strong>\r\n                </Alert>\r\n              ) : null}\r\n              <Box\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                {account ? (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    \r\n                    style={{ marginBottom: 10 }}\r\n                  >\r\n                    <a href=\"/\" style={{textDecoration:\"none\", color:\"black\"}}> Logout </a>\r\n                  </Button>\r\n                ) : null}\r\n                {/* <Box onClick={() => soundFun()}>\r\n                {sound ? <VolumeUpIcon  /> : <VolumeOffIcon />}\r\n                </Box> */}\r\n              </Box>\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {roomId ? <Chat /> : account ? <Entry /> : <Login />}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\nimport Messanger from './components/Messanger';\nimport AccountProvider from './context/AccountProvider';\n\nfunction App() {\n  return (\n    <>\n    <AccountProvider>\n      <Messanger/>\n    </AccountProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}